#!/usr/bin/env bash
set -euo pipefail

# ClaudeOps Boot Recovery Script
# This script runs on system boot/restart to bring services back online
# It reads the last health check and any open issues for context

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CLAUDEOPS_ROOT="$(dirname "$SCRIPT_DIR")"

# Check if running from installed location or development
if [ -d "/usr/local/share/claudeops/prompts" ]; then
    PROMPTS_DIR="/usr/local/share/claudeops/prompts"
else
    PROMPTS_DIR="$CLAUDEOPS_ROOT/prompts"
fi

CONFIG_FILE="${CONFIG_FILE:-/etc/claudeops/config.json}"
LOG_BASE="${LOG_BASE:-/var/log/claudeops}"

# Ensure log directories exist
mkdir -p "$LOG_BASE"/{health,issues,actions,boot}

# Generate timestamp for this boot
TIMESTAMP=$(date +"%Y-%m-%d-%H%M")
BOOT_LOG="$LOG_BASE/boot/$TIMESTAMP.md"

# Check if Claude Code is available
if ! command -v claude &> /dev/null; then
    echo "ERROR: Claude Code CLI not found!" >&2
    echo "Boot recovery cannot proceed without Claude Code" >&2
    exit 1
fi

# Check if config exists
if [ ! -f "$CONFIG_FILE" ]; then
    echo "WARNING: Configuration file not found: $CONFIG_FILE" >&2
    echo "Boot recovery will proceed with basic checks only" >&2
fi

# Log boot event
echo "[$(date)] =====================================" >> "$LOG_BASE/claudeops.log"
echo "[$(date)] SYSTEM BOOT - Starting recovery process" >> "$LOG_BASE/claudeops.log"
echo "[$(date)] =====================================" >> "$LOG_BASE/claudeops.log"

# Get the last health check before shutdown
LAST_HEALTH=""
LAST_HEALTH_FILE=$(ls -t "$LOG_BASE/health/"*.md 2>/dev/null | head -n 1)
if [ -n "$LAST_HEALTH_FILE" ]; then
    LAST_HEALTH="
=== Last Health Check Before Shutdown ===
File: $(basename "$LAST_HEALTH_FILE")

$(cat "$LAST_HEALTH_FILE")
"
else
    LAST_HEALTH="No previous health checks found."
fi

# Get any unresolved issues from before shutdown
OPEN_ISSUES=""
ISSUE_COUNT=0
if [ -d "$LOG_BASE/issues" ]; then
    for issue in $(ls -t "$LOG_BASE/issues/"*.md 2>/dev/null); do
        if ! grep -q "Status:.*RESOLVED" "$issue"; then
            ISSUE_COUNT=$((ISSUE_COUNT + 1))
            OPEN_ISSUES="$OPEN_ISSUES

=== Unresolved Issue #$ISSUE_COUNT ===
File: $(basename "$issue")

$(cat "$issue")
"
        fi
    done
fi

if [ -z "$OPEN_ISSUES" ]; then
    OPEN_ISSUES="No unresolved issues from before shutdown."
fi

# Get boot/shutdown context
BOOT_REASON="Unknown"
LAST_REBOOT=$(last reboot -F | head -n 1 || echo "Unable to determine")

# Get recent system log entries about the boot
BOOT_LOGS=$(journalctl -b -0 --no-pager -n 50 2>/dev/null || echo "Unable to read boot logs")

# Create the prompt for Claude
TEMP_PROMPT=$(mktemp)
cat > "$TEMP_PROMPT" << EOF
CURRENT TIMESTAMP: $(date +"%Y-%m-%d %H:%M:%S")
HOSTNAME: $(hostname)
CONFIG FILE: $CONFIG_FILE
SYSTEM UPTIME: $(uptime -p)
LAST REBOOT: $LAST_REBOOT

=== CONFIGURATION ===
$(cat "$CONFIG_FILE" 2>/dev/null || echo "Config file not found")

=== LAST HEALTH CHECK BEFORE SHUTDOWN ===
$LAST_HEALTH

=== UNRESOLVED ISSUES FROM BEFORE SHUTDOWN ===
$OPEN_ISSUES

=== RECENT BOOT LOGS ===
$BOOT_LOGS

================================
NOW EXECUTE BOOT RECOVERY
================================

$(cat "$PROMPTS_DIR/boot-recovery.md")

IMPORTANT: Write your boot recovery report to: $BOOT_LOG
IMPORTANT: Create issue logs in: $LOG_BASE/issues/
IMPORTANT: Create action logs in: $LOG_BASE/actions/

Begin boot recovery now. Bring all services online in the correct order.
EOF

# Run Claude API with the prepared prompt
echo "[$(date)] Starting Claude API for boot recovery..." >> "$LOG_BASE/claudeops.log"
claude-api --prompt "$(cat "$TEMP_PROMPT")" --print 2>&1 | tee -a "$LOG_BASE/claudeops.log"

# Cleanup
rm -f "$TEMP_PROMPT"

# Log completion
echo "[$(date)] Boot recovery process completed" >> "$LOG_BASE/claudeops.log"
echo "" >> "$LOG_BASE/claudeops.log"

# Check if the boot log was created
if [ -f "$BOOT_LOG" ]; then
    echo "✓ Boot recovery report created: $BOOT_LOG"

    # Check status in the boot log
    if grep -q "Status:.*FAILED" "$BOOT_LOG"; then
        echo "⚠️  BOOT RECOVERY FAILED! Check $BOOT_LOG" >&2
        exit 2
    elif grep -q "Status:.*PARTIAL" "$BOOT_LOG"; then
        echo "⚠️  Boot recovery partially successful. Check $BOOT_LOG"
        exit 1
    else
        echo "✓ Boot recovery successful - all services online"
        exit 0
    fi
else
    echo "WARNING: Boot recovery did not create expected log file: $BOOT_LOG" >&2
    echo "Services may not have started correctly" >&2
    exit 3
fi